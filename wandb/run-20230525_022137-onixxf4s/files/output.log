C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\torch\functional.py:478: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  C:\cb\pytorch_1000000000000\work\aten\src\ATen\native\TensorShape.cpp:2895.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
0
Best Joint Action: 2085
[1, 3, 2, 2, 1]
C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\numpy\core\shape_base.py:121: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  ary = asanyarray(ary)
Best Joint Action: 2813
[4, 2, 2, 2, 3]
Best Joint Action: 881
[1, 2, 0, 1, 1]
Best Joint Action: 881
[1, 2, 0, 1, 1]
Traceback (most recent call last):
  File "C:\Users\tripats\Documents\GitHub\UAV_SubBand_Correlated_DQL\main.py", line 462, in <module>
    weights = UAV_OB[k].correlated_equilibrium(shared_q_values, k)
  File "C:\Users\tripats\Documents\GitHub\UAV_SubBand_Correlated_DQL\main.py", line 208, in correlated_equilibrium
    prob_constr_1 = all(prob_weight) >= 0
  File "C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\cvxpy\expressions\expression.py", line 472, in __getitem__
    return cvxtypes.index()(self, key)
  File "C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\cvxpy\atoms\affine\index.py", line 50, in __init__
    self.key = ku.validate_key(key, expr.shape)
  File "C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\cvxpy\utilities\key_utils.py", line 43, in validate_key
    if any(isinstance(k, float) or (isinstance(k, slice) and (
KeyboardInterrupt
Best Joint Action: 881
[4, 3, 0, 4, 0]