C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\torch\functional.py:478: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  C:\cb\pytorch_1000000000000\work\aten\src\ATen\native\TensorShape.cpp:2895.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
0
[0, 0, 1, 2, 1]
Number of user connected in  0  episode is:  [4 0 4 2 0]
Total user connected in  0  episode is:  10
1
2
3
4
C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\numpy\core\shape_base.py:121: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  ary = asanyarray(ary)
C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\torch\nn\modules\loss.py:922: UserWarning: Using a target size (torch.Size([512])) that is different to the input size (torch.Size([512, 512])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.smooth_l1_loss(input, target, reduction=self.reduction, beta=self.beta)
5
6
7
8
9
10
[0, 0, 0, 2, 2]
Number of user connected in  10  episode is:  [ 1  0 11  4  5]
Total user connected in  10  episode is:  21
11
12
13
14
15
16
17
18
19
20
[0, 1, 3, 1, 4]
Number of user connected in  20  episode is:  [3 3 0 6 0]
Total user connected in  20  episode is:  12
21
Traceback (most recent call last):
  File "C:\Users\tripats\Documents\GitHub\uav_nw_correlated_dql_connectivity\main.py", line 405, in <module>
    correlated_actions = UAV_OB[k].correlated_equilibrium(shared_q_values, k)
  File "C:\Users\tripats\Documents\GitHub\uav_nw_correlated_dql_connectivity\main.py", line 184, in correlated_equilibrium
    sum_contr =  torch.sum(q_value_mat.transpose(0, 1) - shared_q_values[:, negate_Ai_actions.squeeze()], axis=1)
KeyboardInterrupt