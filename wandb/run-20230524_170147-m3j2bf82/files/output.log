C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\torch\functional.py:478: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  C:\cb\pytorch_1000000000000\work\aten\src\ATen\native\TensorShape.cpp:2895.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
0
Traceback (most recent call last):
  File "C:\Users\tripats\Documents\GitHub\uav_nw_correlated_dql_connectivity\main.py", line 456, in <module>
    weights = UAV_OB[k].correlated_equilibrium(shared_q_values, k)
  File "C:\Users\tripats\Documents\GitHub\uav_nw_correlated_dql_connectivity\main.py", line 224, in correlated_equilibrium
    opt_problem.solve()
  File "C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\cvxpy\problems\problem.py", line 493, in solve
    return solve_func(self, *args, **kwargs)
  File "C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\cvxpy\problems\problem.py", line 1054, in _solve
    data, solving_chain, inverse_data = self.get_problem_data(
  File "C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\cvxpy\problems\problem.py", line 631, in get_problem_data
    solving_chain = self._construct_chain(
  File "C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\cvxpy\problems\problem.py", line 881, in _construct_chain
    candidate_solvers = self._find_candidate_solvers(solver=solver, gp=gp)
  File "C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\cvxpy\problems\problem.py", line 786, in _find_candidate_solvers
    raise error.SolverError(msg)
cvxpy.error.SolverError:
                    You need a mixed-integer solver for this model. Refer to the documentation
                        https://www.cvxpy.org/tutorial/advanced/index.html#mixed-integer-programs
                    for discussion on this topic.
                    Quick fix 1: if you install the python package CVXOPT (pip install cvxopt),
                    then CVXPY can use the open-source mixed-integer linear programming
                    solver `GLPK`. If your problem is nonlinear then you can install SCIP
                    (pip install pyscipopt).
                    Quick fix 2: you can explicitly specify solver='ECOS_BB'. This may result
                    in incorrect solutions and is not recommended.