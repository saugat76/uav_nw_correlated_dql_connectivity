C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\torch\functional.py:478: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  C:\cb\pytorch_1000000000000\work\aten\src\ATen\native\TensorShape.cpp:2895.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
0
[1, 0, 4, 4, 2]
Number of user connected in  0  episode is:  [ 9 12 12 11  5]
Total user connected in  0  episode is:  49
1
2
3
4
5
C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\numpy\core\shape_base.py:121: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  ary = asanyarray(ary)
6
7
8
9
10
[3, 3, 4, 3, 2]
Number of user connected in  10  episode is:  [10 16 17  3 10]
Total user connected in  10  episode is:  56
11
12
13
14
15
16
17
18
19
20
[2, 4, 2, 1, 1]
Number of user connected in  20  episode is:  [ 4  3 15 10  6]
Total user connected in  20  episode is:  38
21
22
23
24
25
26
27
28
29
30
[2, 3, 3, 4, 3]
Number of user connected in  30  episode is:  [ 6  4 13  4  5]
Total user connected in  30  episode is:  32
31
32
33
34
35
36
37
38
39
40
[4, 4, 0, 1, 1]
Number of user connected in  40  episode is:  [ 3 14  4  0  3]
Total user connected in  40  episode is:  24
41
42
43
44
45
46
47
48
49
50
[0, 4, 0, 0, 4]
Number of user connected in  50  episode is:  [ 9  5  4 12 16]
Total user connected in  50  episode is:  46
51
52
53
54
55
56
57
58
59
60
[4, 3, 3, 4, 4]
Number of user connected in  60  episode is:  [ 5 14 11  9  3]
Total user connected in  60  episode is:  42
61
62
63
64
65
66
67
68
69
70
[1, 0, 4, 2, 0]
Number of user connected in  70  episode is:  [ 3  3  9 12  4]
Total user connected in  70  episode is:  31
71
72
73
74
75
76
77
78
79
80
[3, 0, 1, 3, 4]
Number of user connected in  80  episode is:  [12  5  5  9  4]
Total user connected in  80  episode is:  35
81
82
83
84
Traceback (most recent call last):
  File "C:\Users\tripats\Documents\GitHub\uav_nw_correlated_dql_connectivity\main.py", line 415, in <module>
  File "C:\Users\tripats\Documents\GitHub\uav_nw_correlated_dql_connectivity\main.py", line 184, in correlated_equilibrium
    sum_contr =  torch.sum(q_value_mat.transpose(0, 1) - shared_q_values[:, negate_Ai_actions.squeeze()], axis=1)
KeyboardInterrupt