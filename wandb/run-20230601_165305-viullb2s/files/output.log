C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\torch\functional.py:478: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  C:\cb\pytorch_1000000000000\work\aten\src\ATen\native\TensorShape.cpp:2895.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
0
[0, 0, 1, 0, 3]
Number of user connected in  0  episode is:  [ 7  3  8 10  4]
Total user connected in  0  episode is:  32
1
2
3
4
5
C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\numpy\core\shape_base.py:121: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  ary = asanyarray(ary)
6
7
8
9
10
[4, 3, 3, 0, 0]
Number of user connected in  10  episode is:  [11 11  5  1  3]
Total user connected in  10  episode is:  31
11
12
13
14
15
16
17
18
19
20
[1, 0, 1, 2, 3]
Number of user connected in  20  episode is:  [ 9  7  9 16  7]
Total user connected in  20  episode is:  48
21
22
23
24
25
26
27
28
29
30
[3, 1, 2, 4, 0]
Number of user connected in  30  episode is:  [ 5  3 12  4  1]
Total user connected in  30  episode is:  25
31
32
33
34
35
36
37
38
39
40
[1, 0, 2, 3, 1]
Number of user connected in  40  episode is:  [8 7 2 4 6]
Total user connected in  40  episode is:  27
41
42
43
44
45
46
47
48
49
50
[1, 0, 1, 4, 4]
Number of user connected in  50  episode is:  [ 8  5 12 13  5]
Total user connected in  50  episode is:  43
51
52
53
54
55
56
57
58
59
60
[4, 3, 4, 0, 3]
Number of user connected in  60  episode is:  [11  5 16  5  6]
Total user connected in  60  episode is:  43
61
62
63
64
65
66
67
68
69
70
[2, 3, 2, 1, 4]
Number of user connected in  70  episode is:  [17  3  7 13  3]
Total user connected in  70  episode is:  43
71
72
73
74
75
76
77
78
79
80
[4, 1, 0, 2, 3]
Number of user connected in  80  episode is:  [13  7  2  2  7]
Total user connected in  80  episode is:  31
81
82
83
84
85
86
87
88
89
90
[2, 4, 0, 4, 4]
Number of user connected in  90  episode is:  [ 3 14  7  6 16]
Total user connected in  90  episode is:  46
91
92
93
94
95
96
97
98
99
100
[0, 4, 1, 4, 3]
Number of user connected in  100  episode is:  [ 7 12  1 15 10]
Total user connected in  100  episode is:  45
101
102
103
104
105
106
107
108
109
110
[4, 3, 1, 1, 3]
Number of user connected in  110  episode is:  [ 3 15  9  8  7]
Total user connected in  110  episode is:  42
111
112
113
114
115
116
117
118
119
120
[2, 3, 3, 2, 0]
Number of user connected in  120  episode is:  [ 4  8  3  3 13]
Total user connected in  120  episode is:  31
121
122
123
124
125
126
127
128
129
130
[1, 3, 0, 3, 2]
Number of user connected in  130  episode is:  [8 6 8 9 3]
Total user connected in  130  episode is:  34
131
132
133
134
135
136
137
138
139
140
[2, 3, 2, 2, 0]
Number of user connected in  140  episode is:  [ 5  6  0 14  2]
Total user connected in  140  episode is:  27
141
142
143
144
145
146
147
148
149
150
[0, 0, 0, 2, 2]
Number of user connected in  150  episode is:  [11 12 14  8  8]
Total user connected in  150  episode is:  53
151
Traceback (most recent call last):
  File "C:\Users\tripats\Documents\GitHub\uav_nw_correlated_dql_connectivity\main.py", line 480, in <module>
    # Track the same information regarding the performance in tensorboard log directory
  File "C:\Users\tripats\Documents\GitHub\uav_nw_correlated_dql_connectivity\main.py", line 224, in train
    state = torch.FloatTensor(np.vstack(minibatch[:,0]))
  File "<__array_function__ internals>", line 180, in vstack
KeyboardInterrupt