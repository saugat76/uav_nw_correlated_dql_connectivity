C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\torch\functional.py:478: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  C:\cb\pytorch_1000000000000\work\aten\src\ATen\native\TensorShape.cpp:2895.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
0
[1, 0, 1, 4, 0]
Number of user connected in  0  episode is:  [ 3 11 13  4  3]
Total user connected in  0  episode is:  34
1
2
3
4
5
C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\numpy\core\shape_base.py:121: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  ary = asanyarray(ary)
6
7
8
9
10
[2, 3, 1, 4, 1]
Number of user connected in  10  episode is:  [ 4  3  8 11  7]
Total user connected in  10  episode is:  33
11
12
13
14
15
Traceback (most recent call last):
  File "C:\Users\tripats\Documents\GitHub\UAV_SubBand_Correlated_DQL\main.py", line 439, in <module>
    action = UAV_OB[k].epsilon_greedy(k)
  File "C:\Users\tripats\Documents\GitHub\UAV_SubBand_Correlated_DQL\main.py", line 244, in epsilon_greedy
    actions = np.random.choice(choices, p=prob)
  File "mtrand.pyx", line 939, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities do not sum to 1